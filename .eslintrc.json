{
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:promise/recommended",
    "plugin:security/recommended",
    "plugin:sonarjs/recommended"
  ],
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "jsx-a11y",
    "import",
    "promise",
    "security",
    "sonarjs",
    "unicorn"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    // 允许的例外规则
    "@next/next/no-img-element": "off",
    "react/no-unescaped-entities": "off",
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    
    // TypeScript 规则
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/no-non-null-assertion": "warn",
    
    // React 规则
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/self-closing-comp": "error",
    "react/jsx-sort-props": ["warn", {
      "callbacksLast": true,
      "shorthandFirst": true,
      "ignoreCase": true,
      "reservedFirst": true
    }],
    "react/function-component-definition": ["warn", {
      "namedComponents": "function-declaration",
      "unnamedComponents": "arrow-function"
    }],
    "react/jsx-no-useless-fragment": "warn",
    "react/jsx-pascal-case": "error",
    
    // 导入规则
    "import/first": "error",
    "import/no-duplicates": "error",
    "import/order": ["warn", {
      "groups": [
        "builtin",
        "external",
        "internal",
        "parent",
        "sibling",
        "index",
        "object",
        "type"
      ],
      "newlines-between": "always",
      "alphabetize": {
        "order": "asc",
        "caseInsensitive": true
      },
      "pathGroups": [
        {
          "pattern": "react",
          "group": "builtin",
          "position": "before"
        },
        {
          "pattern": "next/**",
          "group": "builtin",
          "position": "before"
        },
        {
          "pattern": "@/**",
          "group": "internal",
          "position": "after"
        }
      ],
      "pathGroupsExcludedImportTypes": ["react", "next"]
    }],
    
    // 可访问性规则
    "jsx-a11y/anchor-is-valid": "warn",
    
    // 代码风格规则
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "prefer-const": "error",
    "no-duplicate-imports": "error",
    "no-var": "error",
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "no-unused-expressions": ["error", { "allowShortCircuit": true, "allowTernary": true }],
    "no-param-reassign": ["warn", { "props": false }],
    "no-nested-ternary": "warn",
    "prefer-template": "warn",
    
    // SonarJS 规则
    "sonarjs/no-identical-conditions": "error",
    "sonarjs/no-identical-expressions": "error",
    "sonarjs/no-one-iteration-loop": "error",
    "sonarjs/no-use-of-empty-return-value": "error",
    
    // Unicorn 规则
    "unicorn/better-regex": "warn",
    "unicorn/catch-error-name": "warn",
    "unicorn/error-message": "warn",
    "unicorn/no-array-for-each": "off",
    "unicorn/no-null": "off",
    "unicorn/prefer-includes": "warn",
    
    // Promise 规则
    "promise/always-return": "off",
    "promise/catch-or-return": "warn",
    
    // 安全规则
    "security/detect-object-injection": "off",
    "security/detect-non-literal-regexp": "warn",
    "security/detect-eval-with-expression": "error"
  }
}
