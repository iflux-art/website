
'use client';

import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { ArrowLeft, Heart, Activity, Scale, Droplets } from 'lucide-react';
import Link from 'next/link';

type HealthTabKey = 'bmi' | 'bmr' | 'water' | 'heart';

interface HeartRateZone {
  name: string;
  min: number;
  max: number;
  description: string;
}

interface HeartRateResult {
  maxHR: number;
  zones: HeartRateZone[];
  recommendation: string;
}

interface WaterResult {
  baseAmount: number;
  adjustedAmount: number;
  activityFactor: number;
  climateFactor: number;
  recommendation: string;
  cups: number;
}

interface HealthTab {
  key: HealthTabKey;
  name: string;
  icon: React.ElementType;
}

interface BMIResult {
  bmi: string;
  category: string;
  color: string;
  advice: string;
  idealWeightMin: string;
  idealWeightMax: string;
}

interface BMRResult {
  baseBMR: number;
  dailyCalories: number;
  activityMultiplier: number;
  recommendation: string;
}

export default function HealthToolkitPage() {
  const [activeTab, setActiveTab] = useState<HealthTabKey>('bmi');

  // BMI计算器
  const BMICalculator = () => {
    const [height, setHeight] = useState(170);
    const [weight, setWeight] = useState(65);
    const [result, setResult] = useState<BMIResult | null>(null);

    const calculateBMI = () => {
      const heightInMeters = height / 100;
      const bmi = weight / (heightInMeters * heightInMeters);

      let category = '';
      let color = '';
      let advice = '';

      if (bmi < 18.5) {
        category = '偏瘦';
        color = 'text-blue-600';
        advice = '建议增加营养摄入，适当增重';
      } else if (bmi < 24) {
        category = '正常';
        color = 'text-green-600';
        advice = '保持良好的生活习惯';
      } else if (bmi < 28) {
        category = '超重';
        color = 'text-orange-600';
        advice = '建议控制饮食，增加运动';
      } else {
        category = '肥胖';
        color = 'text-red-600';
        advice = '建议咨询医生，制定减重计划';
      }

      const idealWeightMin = 18.5 * heightInMeters * heightInMeters;
      const idealWeightMax = 24 * heightInMeters * heightInMeters;

      setResult({
        bmi: bmi.toFixed(1),
        category,
        color,
        advice,
        idealWeightMin: idealWeightMin.toFixed(1),
        idealWeightMax: idealWeightMax.toFixed(1),
      });
    };

    return (
      <div className="space-y-4">
        {/* BMI计算器的UI组件 */}
      </div>
    );
  };

  const WaterCalculator = () => {
    const [weight, setWeight] = useState(65);
    const [activityLevel, setActivityLevel] = useState(1);
    const [climate, setClimate] = useState(1);
    const [result, setResult] = useState<WaterResult | null>(null);

    const calculateWater = () => {
      const baseWater = weight * 35; // 基础饮水量（毫升）
      const adjustedWater = baseWater * activityLevel * climate;
      
      setResult({
        baseAmount: baseWater,
        adjustedAmount: adjustedWater,
        activityFactor: activityLevel,
        climateFactor: climate,
        recommendation: `建议每天饮水 ${(adjustedWater / 1000).toFixed(1)} 升`,
        cups: Math.ceil(adjustedWater / 250) // 假设一杯是250ml
      });
    };

    return (
      <div className="space-y-4">
        {/* 饮水计算器的UI组件 */}
      </div>
    );
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="mb-6">
        <Link href="/tools">
          <Button variant="outline" className="flex items-center gap-2">
            <ArrowLeft className="h-4 w-4" />
            返回工具列表
          </Button>
        </Link>
      </div>

      <div className="mb-8">
        <h1 className="text-3xl font-bold tracking-tight flex items-center gap-2">
          <Heart className="h-8 w-8" />
          健康工具集
        </h1>
        <p className="text-muted-foreground mt-2">
          包含BMI计算器、BMR计算器、饮水量计算器和心率区间计算器
        </p>
      </div>

      <div className="grid gap-4">
        {/* 工具卡片内容 */}
      </div>
    </div>
  );
}